startsWith(as.character(OO_ChildStudy_Moral_long1$variable),"Test2P_OO2_3.3")|
startsWith(as.character(OO_ChildStudy_Moral_long1$variable),"Test2P_OO4_3.3"), 0.5,NA)
)))
# Reordering the Split levels
OO_ChildStudy_Moral_long1$Split <- factor(OO_ChildStudy_Moral_long1$Split,levels=c(0.5, 0.33, 0.0))
# Making data wide
OO_ChildStudy_Moral_long <-  OO_ChildStudy_Moral_long1 %>% filter(!str_detect(variable,"Test2P_OOX")) %>% reshape2::dcast(id+Attn_Avg+Age_cont+Race+Gender+OutOp+Split ~ QType, value.var="value")
# Removing the interim datasets
rm(OO_ChildStudy_Predict_long1, OO_ChildStudy_Moral_long1)
# Creating a new column for responses
for (i in 1:length(OO_ChildStudy_Moral_long$AnsChosen)) {
AnsChosen <- OO_ChildStudy_Moral_long$AnsChosen[i]
OkAns <- OO_ChildStudy_Moral_long$OkAns[i]
NotOkAns <- OO_ChildStudy_Moral_long$NotOkAns[i]
Response <- ifelse(AnsChosen =="Ok", OkAns, NotOkAns)
OO_ChildStudy_Moral_long$WordResponse[i] <- Response
}
# Recoding values
# 1 = Definitely not Ok
# 2 = Probably not Ok
# 3 = Maybe not Ok
# 4 = Maybe Ok
# 5 = Probably Ok
# 6 = Definitely Ok
OO_ChildStudy_Moral_long$Response <- ifelse(OO_ChildStudy_Moral_long$WordResponse == "A lot Not Ok", 1,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "Just Not Ok", 2,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "A little Not Ok", 3,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "A little Ok", 4,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "Just Ok", 5,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "A lot Ok", 6,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "Definitely say Not Ok", 1,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "Probably say Not Ok", 2,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "Maybe say Not Ok", 3,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "Maybe say Ok", 4,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "Probably say Ok", 5,
ifelse(OO_ChildStudy_Moral_long$WordResponse == "Definitely say Ok", 6, NA
))))))))))))
##### Predict Dataset #####
#Creating a summary dataframe so I can pull SDs
Df_Summary <- OO_Adult_Predict_long %>% group_by(OutOp, Split) %>% dplyr::summarise(Mean=mean(Response), SD=sd(Response), Num=n())
# SD Vectors
# SD for OutOp = 0
SD_0_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.5) %>% dplyr::pull(SD)
SD_0_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.0) %>% dplyr::pull(SD)
SD_0_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.33) %>% dplyr::pull(SD)
SD_0_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.16) %>% dplyr::pull(SD)
# SD for OutOp = 2
SD_2_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.5) %>% dplyr::pull(SD)
SD_2_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.0) %>% dplyr::pull(SD)
SD_2_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.33) %>% dplyr::pull(SD)
SD_2_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.16) %>% dplyr::pull(SD)
# SD for OutOp = 3
SD_3_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.5) %>% dplyr::pull(SD)
SD_3_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.0) %>% dplyr::pull(SD)
SD_3_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.33) %>% dplyr::pull(SD)
SD_3_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.16) %>% dplyr::pull(SD)
# SD for OutOp = 4
SD_4_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.5) %>% dplyr::pull(SD)
SD_4_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.0) %>% dplyr::pull(SD)
SD_4_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.33) %>% dplyr::pull(SD)
SD_4_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.16) %>% dplyr::pull(SD)
# Means Vectors
# Mean for OutOp = 0
Mean_0_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.5) %>% dplyr::pull(Mean)
Mean_0_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.0) %>% dplyr::pull(Mean)
Mean_0_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.33) %>% dplyr::pull(Mean)
Mean_0_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.16) %>% dplyr::pull(Mean)
# Mean for OutOp = 2
Mean_2_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.5) %>% dplyr::pull(Mean)
Mean_2_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.0) %>% dplyr::pull(Mean)
Mean_2_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.33) %>% dplyr::pull(Mean)
Mean_2_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.16) %>% dplyr::pull(Mean)
# Mean for OutOp = 3
Mean_3_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.5) %>% dplyr::pull(Mean)
Mean_3_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.0) %>% dplyr::pull(Mean)
Mean_3_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.33) %>% dplyr::pull(Mean)
Mean_3_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.16) %>% dplyr::pull(Mean)
# Mean for OutOp = 4
Mean_4_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.5) %>% dplyr::pull(Mean)
Mean_4_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.0) %>% dplyr::pull(Mean)
Mean_4_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.33) %>% dplyr::pull(Mean)
Mean_4_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.16) %>% dplyr::pull(Mean)
# Upper and Lower Bounds (+-3SD)
# OutOp = 0
UB_0_Equal <- Mean_0_Equal+(3*SD_0_Equal)
LB_0_Equal <- Mean_0_Equal-(3*SD_0_Equal)
UB_0_None <- Mean_0_None+(3*SD_0_None)
LB_0_None <- Mean_0_None-(3*SD_0_None)
UB_0_Two <- Mean_0_Two+(3*SD_0_Two)
LB_0_Two <- Mean_0_Two-(3*SD_0_Two)
UB_0_One <- Mean_0_One+(3*SD_0_One)
LB_0_One <- Mean_0_One-(3*SD_0_One)
# OutOp = 2
UB_2_Equal <- Mean_2_Equal+(3*SD_2_Equal)
LB_2_Equal <- Mean_2_Equal-(3*SD_2_Equal)
UB_2_None <- Mean_2_None+(3*SD_2_None)
LB_2_None <- Mean_2_None-(3*SD_2_None)
UB_2_Two <- Mean_2_Two+(3*SD_2_Two)
LB_2_Two <- Mean_2_Two-(3*SD_2_Two)
UB_2_One <- Mean_2_One+(3*SD_2_One)
LB_2_One <- Mean_2_One-(3*SD_2_One)
# OutOp = 3
UB_3_Equal <- Mean_3_Equal+(3*SD_3_Equal)
LB_3_Equal <- Mean_3_Equal-(3*SD_3_Equal)
UB_3_None <- Mean_3_None+(3*SD_3_None)
LB_3_None <- Mean_3_None-(3*SD_3_None)
UB_3_Two <- Mean_3_Two+(3*SD_3_Two)
LB_3_Two <- Mean_3_Two-(3*SD_3_Two)
UB_3_One <- Mean_3_One+(3*SD_3_One)
LB_3_One <- Mean_3_One-(3*SD_3_One)
# OutOp = 4
UB_4_Equal <- Mean_4_Equal+(3*SD_4_Equal)
LB_4_Equal <- Mean_4_Equal-(3*SD_4_Equal)
UB_4_None <- Mean_4_None+(3*SD_4_None)
LB_4_None <- Mean_4_None-(3*SD_4_None)
UB_4_Two <- Mean_4_Two+(3*SD_4_Two)
LB_4_Two <- Mean_4_Two-(3*SD_4_Two)
UB_4_One <- Mean_4_One+(3*SD_4_One)
LB_4_One <- Mean_4_One-(3*SD_4_One)
#Making a dataset to see how many outliers we have
Outliers_Df <- OO_Adult_Predict_long
Outliers_Df$UB <- 99
Outliers_Df$LB <- 99
# Adding Upper and Lower Bounds into the dataset
for (i in 1:4768){
UB <- Outliers_Df$UB[i]
LB <- Outliers_Df$LB[i]
OutOp <- Outliers_Df$OutOp[i]
Split <- Outliers_Df$Split[i]
if(OutOp==0)
{if(Split==0.5)
{Outliers_Df$UB[i] <- UB_0_Equal
Outliers_Df$LB[i] <- LB_0_Equal}
else{
if(Split==0.0)
{Outliers_Df$UB[i] <- UB_0_None
Outliers_Df$LB[i] <- LB_0_None}
else{
if(Split==0.33)
{Outliers_Df$UB[i] <- UB_0_Two
Outliers_Df$LB[i] <- LB_0_Two}
else{
Outliers_Df$UB[i] <- UB_0_One
Outliers_Df$LB[i] <- LB_0_One
}
}
}
}
else{99}
if(OutOp==2)
{if(Split==0.5)
{Outliers_Df$UB[i] <- UB_2_Equal
Outliers_Df$LB[i] <- LB_2_Equal}
else{
if(Split==0.0)
{Outliers_Df$UB[i] <- UB_2_None
Outliers_Df$LB[i] <- LB_2_None}
else{
if(Split==0.33)
{Outliers_Df$UB[i] <- UB_2_Two
Outliers_Df$LB[i] <- LB_2_Two}
else{
Outliers_Df$UB[i] <- UB_2_One
Outliers_Df$LB[i] <- LB_2_One
}
}
}
}
else{99}
if(OutOp==3)
{if(Split==0.5)
{Outliers_Df$UB[i] <- UB_3_Equal
Outliers_Df$LB[i] <- LB_3_Equal}
else{
if(Split==0.0)
{Outliers_Df$UB[i] <- UB_3_None
Outliers_Df$LB[i] <- LB_3_None}
else{
if(Split==0.33)
{Outliers_Df$UB[i] <- UB_3_Two
Outliers_Df$LB[i] <- LB_3_Two}
else{
Outliers_Df$UB[i] <- UB_3_One
Outliers_Df$LB[i] <- LB_3_One
}
}
}
}
else{99}
if(OutOp==4)
{if(Split==0.5)
{Outliers_Df$UB[i] <- UB_4_Equal
Outliers_Df$LB[i] <- LB_4_Equal}
else{
if(Split==0.0)
{Outliers_Df$UB[i] <- UB_4_None
Outliers_Df$LB[i] <- LB_4_None}
else{
if(Split==0.33)
{Outliers_Df$UB[i] <- UB_4_Two
Outliers_Df$LB[i] <- LB_4_Two}
else{
Outliers_Df$UB[i] <- UB_4_One
Outliers_Df$LB[i] <- LB_4_One
}
}
}
}
else{0}
}
# Adding in a column to see whether Responses are outliers or not
Outliers_Df$Outlier <- if_else(Outliers_Df$Response < Outliers_Df$LB |Outliers_Df$Response > Outliers_Df$UB, "YES", "NO")
Outliers_Df %>% group_by(OutOp,Split, Outlier) %>% dplyr::summarise(Num=n())
OO_Adult_Predict_ExOutlier <- Outliers_Df %>% filter(Outlier=="NO")
##### Moral Dataset ####
#Creating a summary dataframe so I can pull SDs
Df_Summary <- OO_Adult_Moral_long %>% group_by(OutOp, Split) %>% dplyr::summarise(Mean=mean(Response), SD=sd(Response), Num=n())
# SD Vectors
# SD for OutOp = 0
SD_0_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.5) %>% dplyr::pull(SD)
SD_0_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.0) %>% dplyr::pull(SD)
SD_0_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.33) %>% dplyr::pull(SD)
SD_0_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.16) %>% dplyr::pull(SD)
# SD for OutOp = 2
SD_2_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.5) %>% dplyr::pull(SD)
SD_2_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.0) %>% dplyr::pull(SD)
SD_2_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.33) %>% dplyr::pull(SD)
SD_2_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.16) %>% dplyr::pull(SD)
# SD for OutOp = 3
SD_3_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.5) %>% dplyr::pull(SD)
SD_3_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.0) %>% dplyr::pull(SD)
SD_3_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.33) %>% dplyr::pull(SD)
SD_3_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.16) %>% dplyr::pull(SD)
# SD for OutOp = 4
SD_4_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.5) %>% dplyr::pull(SD)
SD_4_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.0) %>% dplyr::pull(SD)
SD_4_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.33) %>% dplyr::pull(SD)
SD_4_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.16) %>% dplyr::pull(SD)
# Means Vectors
# Mean for OutOp = 0
Mean_0_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.5) %>% dplyr::pull(Mean)
Mean_0_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.0) %>% dplyr::pull(Mean)
Mean_0_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.33) %>% dplyr::pull(Mean)
Mean_0_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="0", Split==0.16) %>% dplyr::pull(Mean)
# Mean for OutOp = 2
Mean_2_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.5) %>% dplyr::pull(Mean)
Mean_2_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.0) %>% dplyr::pull(Mean)
Mean_2_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.33) %>% dplyr::pull(Mean)
Mean_2_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="2", Split==0.16) %>% dplyr::pull(Mean)
# Mean for OutOp = 3
Mean_3_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.5) %>% dplyr::pull(Mean)
Mean_3_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.0) %>% dplyr::pull(Mean)
Mean_3_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.33) %>% dplyr::pull(Mean)
Mean_3_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="3", Split==0.16) %>% dplyr::pull(Mean)
# Mean for OutOp = 4
Mean_4_Equal <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.5) %>% dplyr::pull(Mean)
Mean_4_None <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.0) %>% dplyr::pull(Mean)
Mean_4_Two <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.33) %>% dplyr::pull(Mean)
Mean_4_One <- Df_Summary %>% dplyr::ungroup() %>% dplyr::filter(OutOp=="4", Split==0.16) %>% dplyr::pull(Mean)
# Upper and Lower Bounds (+-3SD)
# OutOp = 0
UB_0_Equal <- Mean_0_Equal+(3*SD_0_Equal)
LB_0_Equal <- Mean_0_Equal-(3*SD_0_Equal)
UB_0_None <- Mean_0_None+(3*SD_0_None)
LB_0_None <- Mean_0_None-(3*SD_0_None)
UB_0_Two <- Mean_0_Two+(3*SD_0_Two)
LB_0_Two <- Mean_0_Two-(3*SD_0_Two)
UB_0_One <- Mean_0_One+(3*SD_0_One)
LB_0_One <- Mean_0_One-(3*SD_0_One)
# OutOp = 2
UB_2_Equal <- Mean_2_Equal+(3*SD_2_Equal)
LB_2_Equal <- Mean_2_Equal-(3*SD_2_Equal)
UB_2_None <- Mean_2_None+(3*SD_2_None)
LB_2_None <- Mean_2_None-(3*SD_2_None)
UB_2_Two <- Mean_2_Two+(3*SD_2_Two)
LB_2_Two <- Mean_2_Two-(3*SD_2_Two)
UB_2_One <- Mean_2_One+(3*SD_2_One)
LB_2_One <- Mean_2_One-(3*SD_2_One)
# OutOp = 3
UB_3_Equal <- Mean_3_Equal+(3*SD_3_Equal)
LB_3_Equal <- Mean_3_Equal-(3*SD_3_Equal)
UB_3_None <- Mean_3_None+(3*SD_3_None)
LB_3_None <- Mean_3_None-(3*SD_3_None)
UB_3_Two <- Mean_3_Two+(3*SD_3_Two)
LB_3_Two <- Mean_3_Two-(3*SD_3_Two)
UB_3_One <- Mean_3_One+(3*SD_3_One)
LB_3_One <- Mean_3_One-(3*SD_3_One)
# OutOp = 4
UB_4_Equal <- Mean_4_Equal+(3*SD_4_Equal)
LB_4_Equal <- Mean_4_Equal-(3*SD_4_Equal)
UB_4_None <- Mean_4_None+(3*SD_4_None)
LB_4_None <- Mean_4_None-(3*SD_4_None)
UB_4_Two <- Mean_4_Two+(3*SD_4_Two)
LB_4_Two <- Mean_4_Two-(3*SD_4_Two)
UB_4_One <- Mean_4_One+(3*SD_4_One)
LB_4_One <- Mean_4_One-(3*SD_4_One)
#Making a dataset to see how many outliers we have
Outliers_Df <- OO_Adult_Moral_long
Outliers_Df$UB <- 99
Outliers_Df$LB <- 99
# Adding Upper and Lower Bounds into the dataset
for (i in 1:4768){
UB <- Outliers_Df$UB[i]
LB <- Outliers_Df$LB[i]
OutOp <- Outliers_Df$OutOp[i]
Split <- Outliers_Df$Split[i]
if(OutOp==0)
{if(Split==0.5)
{Outliers_Df$UB[i] <- UB_0_Equal
Outliers_Df$LB[i] <- LB_0_Equal}
else{
if(Split==0.0)
{Outliers_Df$UB[i] <- UB_0_None
Outliers_Df$LB[i] <- LB_0_None}
else{
if(Split==0.33)
{Outliers_Df$UB[i] <- UB_0_Two
Outliers_Df$LB[i] <- LB_0_Two}
else{
Outliers_Df$UB[i] <- UB_0_One
Outliers_Df$LB[i] <- LB_0_One
}
}
}
}
else{99}
if(OutOp==2)
{if(Split==0.5)
{Outliers_Df$UB[i] <- UB_2_Equal
Outliers_Df$LB[i] <- LB_2_Equal}
else{
if(Split==0.0)
{Outliers_Df$UB[i] <- UB_2_None
Outliers_Df$LB[i] <- LB_2_None}
else{
if(Split==0.33)
{Outliers_Df$UB[i] <- UB_2_Two
Outliers_Df$LB[i] <- LB_2_Two}
else{
Outliers_Df$UB[i] <- UB_2_One
Outliers_Df$LB[i] <- LB_2_One
}
}
}
}
else{99}
if(OutOp==3)
{if(Split==0.5)
{Outliers_Df$UB[i] <- UB_3_Equal
Outliers_Df$LB[i] <- LB_3_Equal}
else{
if(Split==0.0)
{Outliers_Df$UB[i] <- UB_3_None
Outliers_Df$LB[i] <- LB_3_None}
else{
if(Split==0.33)
{Outliers_Df$UB[i] <- UB_3_Two
Outliers_Df$LB[i] <- LB_3_Two}
else{
Outliers_Df$UB[i] <- UB_3_One
Outliers_Df$LB[i] <- LB_3_One
}
}
}
}
else{99}
if(OutOp==4)
{if(Split==0.5)
{Outliers_Df$UB[i] <- UB_4_Equal
Outliers_Df$LB[i] <- LB_4_Equal}
else{
if(Split==0.0)
{Outliers_Df$UB[i] <- UB_4_None
Outliers_Df$LB[i] <- LB_4_None}
else{
if(Split==0.33)
{Outliers_Df$UB[i] <- UB_4_Two
Outliers_Df$LB[i] <- LB_4_Two}
else{
Outliers_Df$UB[i] <- UB_4_One
Outliers_Df$LB[i] <- LB_4_One
}
}
}
}
else{0}
}
# Adding in a column to see whether Responses are outliers or not
Outliers_Df$Outlier <- if_else(Outliers_Df$Response < Outliers_Df$LB |Outliers_Df$Response > Outliers_Df$UB, "YES", "NO")
Outliers_Df %>% group_by(OutOp,Split, Outlier) %>% dplyr::summarise(Num=n())
OO_Adult_Moral_ExOutlier <- Outliers_Df %>% filter(Outlier=="NO")
clmm.modpredict1 <- clmm(as.factor(Response)~Split*as.numeric(OutOp)*Age_cont+(1|id), data=OO_ChildStudy_Predict_long, Hess=T, nAGQ=17, control = clmm.control(maxIter = 50000,
maxLineIter = 50000))
summary(clmm.modpredict1)
glm.modpredict1 <- glm(as.numeric(Response)~Split*OutOp*Age_cont+(1|as.numeric(id)), data=OO_ChildStudy_Predict_long)
summary(glm.modpredict1)
glm.modpredict3 <- glm(as.numeric(Response)~Split*OutOp+(1|as.numeric(id)), data=OO_Adult_Predict_ExOutlier)
summary(glm.modpredict3)
glm.modmoral3 <- glm(as.numeric(Response)~Split*OutOp+(1|as.numeric(id)), data=OO_Adult_Moral_ExOutlier)
glm.modmoral3 <- lmer(as.numeric(Response)~ordered(Split)*ordered(OutOp)+(1|id), data=OO_Adult_Moral_ExOutlier)
summary(glm.modmoral3)
drop1(glm.modmoral3,test="Chisq")
# glm.modmoral3 <- glm(as.numeric(Response)~Split*OutOp+(1|as.numeric(id)), data=OO_Adult_Moral_ExOutlier)
glm.modmoral3 <- lmer(as.numeric(Response)~ordered(Split)*ordered(OutOp)+(1|id), data=OO_Adult_Moral_ExOutlier)
summary(glm.modmoral3)
drop1(glm.modmoral3,test="Chisq")
m.emm <- emmeans(m, "Days")
library(emmeans)
m.emm <- emmeans(m, "Days")
m.emm <- emmeans(glm.modmoral3, "Daordered(Split) * ordered(OutOp)ys")
table(OO_Adult_Moral_ExOutlier$ordered(Split))
table(OO_Adult_Moral_ExOutlier$dSplit)
table(OO_Adult_Moral_ExOutlier$Split)
table(OO_Adult_Moral_ExOutlier$Resposne)
table(OO_Adult_Moral_ExOutlier$Response)
# glm.modmoral3 <- glm(as.numeric(Response)~Split*OutOp+(1|as.numeric(id)), data=OO_Adult_Moral_ExOutlier)
glm.modmoral3 <- lmer(as.numeric(Response)~Split*OutOp+(1|id), data=OO_Adult_Moral_ExOutlier)
summary(glm.modmoral3)
drop1(glm.modmoral3,test="Chisq")
table(OO_Adult_Moral_ExOutlier$OutOp). # splits, .5, .33, .16, 0
table(OO_Adult_Moral_ExOutlier$OutOp) # splits, .5, .33, .16, 0
table(OO_Adult_Moral_ExOutlier$OutOp) # Outside option, 0, 2, 3, 4
# glm.modmoral3 <- glm(as.numeric(Response)~Split*OutOp+(1|as.numeric(id)), data=OO_Adult_Moral_ExOutlier)
glm.modmoral3 <- lmer(as.numeric(Response)~Split*as.factor(OutOp)+(1|id), data=OO_Adult_Moral_ExOutlier)
summary(glm.modmoral3)
drop1(glm.modmoral3,test="Chisq")
m.emm <- emmeans(glm.modmoral3, "Split * OutOp")
m.emm <- emmeans(glm.modmoral3, "Split * as.factor(OutOp)")
summary(glm.modmoral3)
m.emm <- emmeans(glm.modmoral3, "Split")
m.emm <- emmeans(glm.modmoral3, ~ Split * as.factor(OutOp))
m.emm
pairs(m.emm)
model.matrix(as.numeric(Response)~Split*as.factor(OutOp)+(1|id), data=OO_Adult_Moral_ExOutlier)
model.matrix(glm.modmoral3)
table(OO_Adult_Moral_ExOutlier$Split). # splits, .5, .33, .16, 0
table(OO_Adult_Moral_ExOutlier$Split) # splits, .5, .33, .16, 0
table(OO_Adult_Moral_ExOutlier$OutOp) # Outside option, 0, 2, 3, 4
mod <- lm(breaks ~ wool + tension, data = warpbreaks)
summary(mod)
K1 <- glht(mod, mcp(wool = "Tukey"))$linfct
K1
library(multcomp)
mod <- lm(breaks ~ wool + tension, data = warpbreaks)
summary(mod)
K1 <- glht(mod, mcp(wool = "Tukey"))$linfct
K1
K2 <- glht(mod, mcp(tension = "Tukey"))$linfct
K2
summary(glht(mod, linfct = rbind(K1, K2)))
K1 <- glht(glm.modmoral3, mcp(Split = "Tukey"))$linfct
K1
summary(glht(mod, linfct = K1))
summary(glht(glm.modmoral3, linfct = K1))
K1 <- glht(glm.modmoral3, mcp(OutOp = "Tukey"))$linfct
K1 <- glht(glm.modmoral3, mcp(Split = "Tukey"))$linfct
K2 <- glht(glm.modmoral3, mcp(OutOp = "Tukey"))$linfct
summary(glht(glm.modmoral3, rbind(K1, K2)))
K1 <- glht(glm.modmoral3, mcp(Split = "Tukey"))$linfct
K2 <- glht(glm.modmoral3, mcp(OutOp = "Tukey"))$linfct
summary(glht(glm.modmoral3, rbind(K1, K2)))
K2 <- glht(glm.modmoral3, mcp(OutOp = "Tukey"))$linfct
K1 <- glht(glm.modmoral3, mcp(Split = "Tukey"))$linfct
K2 <- glht(glm.modmoral3, mcp(as.factor(OutOp) = "Tukey"))$linfct
K2 <- glht(glm.modmoral3, mcp(as.factor(OutOp) = "Tukey"))$linfct
# fit model
m <- lmer(weight ~ Time * Diet + (1 | Chick),
data = ChickWeight, REML = F)
m
# glm.modmoral3 <- glm(as.numeric(Response)~Split*OutOp+(1|as.numeric(id)), data=OO_Adult_Moral_ExOutlier)
glm.modmoral3 <- lmer(as.numeric(Response)~Split*OutOp+(1|id), data=OO_Adult_Moral_ExOutlier)
summary(glm.modmoral3)
split
View(OO_Adult_Moral_long)
View(OO_Adult_Moral_ExOutlier)
View(OO_Adult_Moral)
model.matrix(glm.modmoral3)
# lmer with Split as factor and OutOp as numeric
# (what justifies doing one of these as numeric and the other as factor, really?)
glm.modmoral3 <- lmer(as.numeric(Response)~Split*OutOp+(1|id), data=OO_Adult_Moral_ExOutlier)
sjPlot::plot_model(glm.modmoral3,type='int')
sjPlot::plot_model(glm.modmoral3,type='int')
glm.modmoral3 <- lmer(as.numeric(Response)~OutOp*Split+(1|id), data=OO_Adult_Moral_ExOutlier)
sjPlot::plot_model(glm.modmoral3,type='int')
sjPlot::plot_model(glm.modmoral3,type='int')
sjPlot::plot_model(glm.modmoral3,type='int')
# lmer with Split as factor and OutOp as numeric
# (what justifies doing one of these as numeric and the other as factor, really?)
glm.modmoral3 <- lmer(as.numeric(Response)~Split*OutOp+(1|id), data=OO_Adult_Moral_ExOutlier)
sjPlot::plot_model(glm.modmoral3,type='int')
sjPlot::plot_model(glm.modmoral3,type='int')
# lmer with Split as factor and OutOp as numeric
# (what justifies doing one of these as numeric and the other as factor, really?)
glm.modmoral3 <- lmer(as.numeric(Response)~Split*OutOp+(1|id), data=OO_Adult_Moral_ExOutlier)
model.matrix(glm.modmoral3)
# fit model
m <- lmer(weight ~ Time * Diet + (1 | Chick),
data = ChickWeight, REML = F)
# inspect model matrix to identify order of terms
model.matrix(weight ~ Time * Diet, data=ChickWeight)
glm.modmoral3 <- lmer(as.numeric(Response)~OutOp*Split+(1|id), data=OO_Adult_Moral_ExOutlier) # just reversed order of predictors
model.matrix(glm.modmoral3)
model.matrix(m)
ChickWeight
OO_Adult_Moral_ExOutlier
OO_Adult_Moral_ExOutlier
OO_Adult_Moral_ExOutlier
adM <- OO_Adult_Moral_ExOutlier %>%
select(Response,Split,OutOp,id)
library(tidyverse)
adM <- OO_Adult_Moral_ExOutlier %>%
select(Response,Split,OutOp,id)
